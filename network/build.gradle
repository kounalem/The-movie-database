plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)

    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}


def getProp(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        throw IllegalStateException("Cannot find $propName in local.properties")
    }
}

android {
    namespace 'com.kounalem.moviedatabase.network'
    compileSdk 34

    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        minSdk 24

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        buildConfigField "String", "DATABASE_API_KEY", getProp("DATABASE_API_KEY")
// feel free to use this as API KEY - "\"0154126bcc52cfe539c99204454466a9\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation(project(":core:domain:models"))

    // Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.okhttp
    implementation libs.logging.interceptor

    //hilt
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    kapt libs.androidx.hilt.compiler

    //test
    testImplementation libs.junit
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.mockk
    testImplementation libs.turbine
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}